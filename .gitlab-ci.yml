variables:
  MAVEN_OPTS: "-Xmx512m -Xms256m"
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"

stages:
  - build
  - unit-test
  - checkstyle
  - sonar-analysis
  - quality-gate
  - docker-build
  - update-deployment

cache:
  paths:
    - .m2/repository/

build:
  stage: build
  image: maven:3.9-eclipse-temurin-21
  script:
    - mvn clean install -DskipTests
  artifacts:
    paths:
      - target/
    expire_in: 1 hour
  only:
    - main
    - merge_requests

unit-test:
  stage: unit-test
  image: maven:3.9-eclipse-temurin-21
  script:
    - mvn test
  artifacts:
    paths:
      - target/surefire-reports/
    expire_in: 1 week
    when: always
  only:
    - main
    - merge_requests

checkstyle:
  stage: checkstyle
  image: maven:3.9-eclipse-temurin-21
  script:
    - mvn checkstyle:checkstyle
  artifacts:
    paths:
      - target/checkstyle-result.xml
  only:
    - main
    - merge_requests

sonar-analysis:
  stage: sonar-analysis
  image: sonarsource/sonar-scanner-cli:latest
  script:
    - sonar-scanner
      -Dsonar.login=$LOGIN
      -Dsonar.host.url=$HOST
      -Dsonar.organization=$Organization
      -Dsonar.projectKey=$Project
      -Dsonar.projectName=vprofile-repo
      -Dsonar.projectVersion=1.0
      -Dsonar.sources=src/
      -Dsonar.java.binaries=target/classes/com/visualpathit/account/controller/
      -Dsonar.junit.reportsPath=target/surefire-reports/
      -Dsonar.jacoco.reportsPath=target/jacoco.exec
      -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml
  only:
    - main
    - merge_requests

quality-gate:
  stage: quality-gate
  image: curlimages/curl:latest
  script:
    - |
      if [ -n "$CI_MERGE_REQUEST_IID" ]; then
        URL="$HOST/api/qualitygates/project_status?projectKey=$Project&pullRequest=$CI_MERGE_REQUEST_IID"
      else
        URL="$HOST/api/qualitygates/project_status?projectKey=$Project&branch=$CI_COMMIT_REF_NAME"
      fi
      
      for i in $(seq 1 12); do
        echo "Checking quality gate status (attempt $i/12)..."
        RESPONSE=$(curl -s -u "$LOGIN:" "$URL")
        STATUS=$(echo "$RESPONSE" | grep -o '"projectStatus":{"status":"[^"]*"' | cut -d'"' -f6)
        
        if [ "$STATUS" = "OK" ]; then
          echo "Quality Gate PASSED"
          exit 0
        elif [ "$STATUS" = "ERROR" ]; then
          echo "Quality Gate FAILED"
          exit 1
        else
          echo "Quality Gate status: $STATUS - waiting..."
          sleep 10
        fi
      done
      
      echo "Quality Gate check timed out after 2 minutes"
      exit 1
  only:
    - main
    - merge_requests

docker-build:
  stage: docker-build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -f Docker-files/app/multistage/Dockerfile -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "main"

update-deployment:
  stage: update-deployment
  image: alpine:latest
  before_script:
    - apk add --no-cache git yq
  script:
    - echo "Registry variables:"
    - echo "CI_REGISTRY_IMAGE=${CI_REGISTRY_IMAGE}"
    - echo "CI_COMMIT_SHA=${CI_COMMIT_SHA}"
    - git clone https://oauth2:$CHARTS_REPO_TOKEN@$CHARTS_REPO_URL charts-repo
    - cd charts-repo
    - echo "values.yaml before editing:"
    - cat vprofile-chart/values.yaml
    - yq eval ".app.image = \"${CI_REGISTRY_IMAGE}\"" -i vprofile-chart/values.yaml
    - yq eval ".app.tag = \"${CI_COMMIT_SHA}\"" -i vprofile-chart/values.yaml
    - echo "values.yaml after editing:"
    - cat vprofile-chart/values.yaml
    - git config user.email "gitlab@example.com"
    - git config user.name "GitLab CI"
    - git add vprofile-chart/values.yaml
    - git commit -m "Update app image to $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
    - git push
  rules:
    - if: $CI_COMMIT_BRANCH == "main"